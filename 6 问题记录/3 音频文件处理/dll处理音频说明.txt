sndUtil.dll文件依赖lame.exe处理
1、mp3转wav格式
2、多wav格式音频文件叠加合并。
注意：lame.exe文件需要放置到jdk下的bin目录。

可能出现的问题及解决办法：
 	动态库是32位的，而JDK是64位的，所以：
	如果要调用32位的JDK必须是32位的；
	相应地，如果动态库是64位的，必须使用64位JDK。


Java调用dll说明

Java通过JNA技术动态链接库调用dll（http://www.cnblogs.com/huozhong/p/5830485.html）

1、dll文件放在工程目录下，或者指定path路径，dll不能携带后缀

2、sndUtil.dll采用unicode字符集，避免dll接口内接受java字符串乱码（英文也会），需要用JNA内置WString类型。

import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.WString;

/**
 * Created by Administrator on 2017/3/17.
 */
public class Test {

    public interface TestDllMain extends Library {

        //dll文件放在工程目录下，或者指定path路径，dll不能携带后缀
        TestDllMain instance = (TestDllMain) Native.loadLibrary("sndUtil", TestDllMain.class);

        int sndChannelfile(WString sourceFile1, WString sourceFile2, WString destFile);


        int sndNormalizefile(WString sourceFile, WString destFile);

    }

    public static void main(String[] args)
    {
       

        String srcMp3FilePath_1 = "E:\\2 workspace\\test1\\F16334001110002_pair.mp3";
        String srcWavFilePath_1 = "E:\\test\\wav\\F16334001110002_pair.wav";

        String srcMp3FilePath_2 = "E:\\2 workspace\\test1\\F16334001110003_pair.mp3";
        String srcWavFilePath_2 = "E:\\test\\wav\\F16334001110003_pair.wav";

        //
        String srcWavFilePath_target = "E:\\test\\wav\\F16334001110003_tog.wav";

        String srcMp3FilePath_target = "E:\\test\\wav\\F16334001110003_tog.mp3";


        try
        {
            //将mp3文件转换为wav格式
            TestDllMain.instance.sndNormalizefile(new WString(srcMp3FilePath_1), new WString(srcWavFilePath_1));

            TestDllMain.instance.sndNormalizefile(new WString(srcMp3FilePath_2), new WString(srcWavFilePath_2));

            //将多个WAV音频文件叠加为多通道单一音频文件
            TestDllMain.instance.sndChannelfile(new WString(srcWavFilePath_1), new WString(srcWavFilePath_2), new WString(srcWavFilePath_target));

            //将多通道wav文件转换为mp3格式
            TestDllMain.instance.sndNormalizefile(new WString(srcWavFilePath_target), new WString(srcMp3FilePath_target));

        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }


}


