<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iflytek.cetsim.dao.SpecialTrainRecordMapper" >
  <resultMap id="BaseResultMap" type="com.iflytek.cetsim.model.SpecialTrainRecord" >
    <id column="code" property="code" jdbcType="VARCHAR" />
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="student_no" property="studentNo" jdbcType="VARCHAR" />
    <result column="paper_item_code" property="paperItemCode" jdbcType="VARCHAR" />
    <result column="client_mac" property="clientMac" jdbcType="VARCHAR" />
    <result column="client_ip" property="clientIp" jdbcType="VARCHAR" />
    <result column="exam_state" property="examState" jdbcType="SMALLINT" />
    <result column="flow_state" property="flowState" jdbcType="SMALLINT" />
    <result column="group_state" property="groupState" jdbcType="SMALLINT" />
    <result column="paper_state" property="paperState" jdbcType="SMALLINT" />
    <result column="eval_state" property="evalState" jdbcType="SMALLINT" />
    <result column="data_state" property="dataState" jdbcType="SMALLINT" />
    <result column="data_path" property="dataPath" jdbcType="VARCHAR" />
    <result column="error_code" property="errorCode" jdbcType="SMALLINT" />
    <result column="exam_role" property="examRole" jdbcType="VARCHAR" />
    <result column="partner_special_train_record_code" property="partnerSpecialTrainRecordCode" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="REAL" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />

    <result column="reserved1" property="reserved1" jdbcType="VARCHAR" />
    <result column="reserved2" property="reserved2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    code, id, student_no, paper_item_code, client_mac, client_ip, exam_state, flow_state, 
    group_state, paper_state, eval_state, data_state, data_path, error_code, exam_role, 
    partner_special_train_record_code, score, start_time, end_time, token, reserved1, reserved2
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sim_special_train_record
    where code = #{code,jdbcType=VARCHAR}
  </select>
  <insert id="insert" parameterType="com.iflytek.cetsim.model.SpecialTrainRecord" >
    insert into sim_special_train_record (code, id, student_no, 
      paper_item_code, client_mac, client_ip, 
      exam_state, flow_state, group_state, 
      paper_state, eval_state, data_state, 
      data_path, error_code, exam_role, 
      partner_special_train_record_code, score, start_time, end_time, token,
      reserved1, reserved2)
    values (#{code,jdbcType=VARCHAR}, #{id,jdbcType=INTEGER}, #{studentNo,jdbcType=VARCHAR}, 
      #{paperItemCode,jdbcType=VARCHAR}, #{clientMac,jdbcType=VARCHAR}, #{clientIp,jdbcType=VARCHAR}, 
      #{examState,jdbcType=SMALLINT}, #{flowState,jdbcType=SMALLINT}, #{groupState,jdbcType=SMALLINT}, 
      #{paperState,jdbcType=SMALLINT}, #{evalState,jdbcType=SMALLINT}, #{dataState,jdbcType=SMALLINT}, 
      #{dataPath,jdbcType=VARCHAR}, #{errorCode,jdbcType=SMALLINT}, #{examRole,jdbcType=SMALLINT}, 
      #{partnerSpecialTrainRecordCode,jdbcType=VARCHAR}, #{score,jdbcType=REAL}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{token,jdbcType=VARCHAR},
      #{reserved1,jdbcType=VARCHAR}, #{reserved2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.iflytek.cetsim.model.SpecialTrainRecord" >
    insert into sim_special_train_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        code,
      </if>
      <if test="id != null" >
        id,
      </if>
      <if test="studentNo != null" >
        student_no,
      </if>
      <if test="paperItemCode != null" >
        paper_item_code,
      </if>
      <if test="clientMac != null" >
        client_mac,
      </if>
      <if test="clientIp != null" >
        client_ip,
      </if>
      <if test="examState != null" >
        exam_state,
      </if>
      <if test="flowState != null" >
        flow_state,
      </if>
      <if test="groupState != null" >
        group_state,
      </if>
      <if test="paperState != null" >
        paper_state,
      </if>
      <if test="evalState != null" >
        eval_state,
      </if>
      <if test="dataState != null" >
        data_state,
      </if>
      <if test="dataPath != null" >
        data_path,
      </if>
      <if test="errorCode != null" >
        error_code,
      </if>
      <if test="examRole != null" >
        exam_role,
      </if>
      <if test="partnerSpecialTrainRecordCode != null" >
        partner_special_train_record_code,
      </if>
      <if test="score != null" >
        score,
      </if>

      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>

      <if test="token != null" >
        token,
      </if>
      <if test="reserved1 != null" >
        reserved1,
      </if>
      <if test="reserved2 != null" >
        reserved2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentNo != null" >
        #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="paperItemCode != null" >
        #{paperItemCode,jdbcType=VARCHAR},
      </if>
      <if test="clientMac != null" >
        #{clientMac,jdbcType=VARCHAR},
      </if>
      <if test="clientIp != null" >
        #{clientIp,jdbcType=VARCHAR},
      </if>
      <if test="examState != null" >
        #{examState,jdbcType=SMALLINT},
      </if>
      <if test="flowState != null" >
        #{flowState,jdbcType=SMALLINT},
      </if>
      <if test="groupState != null" >
        #{groupState,jdbcType=SMALLINT},
      </if>
      <if test="paperState != null" >
        #{paperState,jdbcType=SMALLINT},
      </if>
      <if test="evalState != null" >
        #{evalState,jdbcType=SMALLINT},
      </if>
      <if test="dataState != null" >
        #{dataState,jdbcType=SMALLINT},
      </if>
      <if test="dataPath != null" >
        #{dataPath,jdbcType=VARCHAR},
      </if>
      <if test="errorCode != null" >
        #{errorCode,jdbcType=SMALLINT},
      </if>
      <if test="examRole != null" >
        #{examRole,jdbcType=SMALLINT},
      </if>
      <if test="partnerSpecialTrainRecordCode != null" >
        #{partnerSpecialTrainRecordCode,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=REAL},
      </if>

      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>

      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="reserved1 != null" >
        #{reserved1,jdbcType=VARCHAR},
      </if>
      <if test="reserved2 != null" >
        #{reserved2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateIpMac" parameterType="java.util.Map">
    update sim_special_train_record set client_ip = #{ip}, client_mac = #{mac}, start_time = #{startTime}
    where code = #{recordId}
  </update>
  <update id="updateFlowState" parameterType="java.util.Map">
    update sim_special_train_record set flow_state = #{state} where code = #{code}
  </update>
  <update id="updateGroupState" parameterType="java.util.Map">
    update sim_special_train_record set group_state = #{state} where code = #{code}
  </update>
  <update id="updatePaperState" parameterType="java.util.Map">
    update sim_special_train_record set paper_state = #{state} where code = #{code}
  </update>
  <update id="updateDataState" parameterType="java.util.Map">
    update sim_special_train_record set data_state = #{state}, start_time = #{startTime} where code = #{code}
  </update>
  <update id="updateExamState" parameterType="java.util.Map">
    update sim_special_train_record set exam_state = #{examState} where code = #{code}
  </update>
  <update id="updateErrorCode" parameterType="java.util.Map">
    update sim_special_train_record set error_code = #{error} where code = #{code}
  </update>
  <select id="getPartnerGroupState" parameterType="java.util.Map" resultType="java.lang.Short">
    select group_state from sim_special_train_record where code = #{partnerRecordId}
  </select>
  <select id="getPartnerFlowState" parameterType="java.util.Map" resultType="java.lang.Short">
    select flow_state from sim_special_train_record where code = #{partnerRecordId}
  </select>
  <update id="updateDataPath" parameterType="java.util.Map">
    update sim_special_train_record set data_path = #{dataPath} where code = #{code}
  </update>

  <update id="cancelGroup" parameterType="java.lang.String">
    update sim_special_train_record set partner_special_train_record_code  = NULL, exam_role = NULL, group_state = 4 where code = #{recordId}
  </update>
  <update id="cleanPartner" parameterType="java.lang.String">
    update sim_special_train_record set partner_special_train_record_code = NULL, exam_role = NULL where code = #{recordId}
  </update>
  <select id="getCurrentRecord" parameterType="java.lang.String" resultType="com.iflytek.cetsim.dto.RecordDTO">
    select code as recordId, student_no as studentNo, exam_state as examState, flow_state as flowState, client_ip as ip,
    paper_state as paperState, eval_state as evalState, group_state as groupState, error_code as errorCode, paper_item_code as paperCode,
    exam_role as examRole, partner_special_train_record_code as partnerRecordId, score, start_time as startTime, end_time as endTime
    from sim_special_train_record where code = #{recordId}
  </select>
  <select id="selectPartner" parameterType="java.util.Map" resultType="com.iflytek.cetsim.dto.ExamLoginDTO">
    select u.account as accountId,er.code as examineeId, u.name studentName, u.gender,
    client_ip as ip,client_mac as mac, u.reserved1 as photo, er.exam_role as examRole,
    er.code as recordId, er.token,er.paper_item_code as paperCode
    from sim_special_train_record er join sim_user u on er.student_no=u.account
    where flow_state = 1 and (group_state = 1 or group_state = 2) and er.exam_state = 0
    and er.paper_item_code = #{paperCode}
    and er.student_no != #{studentNo}
    and er.client_ip != #{currentIp}
    and er.code != #{exceptSelf}
    <if test="recordId != null">
    and code = #{recordId}
  </if>
  </select>
  <select id="examineeLogin" parameterType="java.util.Map" resultType="com.iflytek.cetsim.dto.ExamLoginDTO">
    select u.account as accountId,er.code as examineeId, u.name studentName, u.gender,
    client_ip as ip,client_mac as mac, u.reserved1 as photo, er.exam_role as examRole,
    er.code as recordId, er.token, er.paper_item_code as paperCode
    from sim_special_train_record er join sim_user u on er.student_no=u.account
    where er.code = #{recordId}
    order by er.id DESC
  </select>
  <update id="updateGroupInfo" parameterType="java.util.Map">
    update sim_special_train_record set exam_role = #{examRole}, partner_special_train_record_code = #{partnerRecordId}
    where code = #{recordId}
  </update>

  <select id="querySpecialRecordListByAccount" parameterType="java.util.Map" resultType="com.iflytek.cetsim.dto.SpecialTaskRecordDTO">
    select item.`code` as paperItmeCode, item.`name` as paperItemName, type.code as paperItemTypeCode, type.name as paperItemTypeName,
    count(item.`code`) as userCount, record.score,
    MAX(record.score) maxScore from sim_special_train_record record
    left JOIN sim_paper_item item on item.`code` = record.paper_item_code
    left JOIN sim_paper_item_type type on item.paper_item_type_code = type.code
    <where>
      record.exam_state = 1
      <if test="student_account != null">
        and record.student_no = #{student_account, jdbcType=VARCHAR}
      </if>
      <if test="paper_item_type_code != null">
        and item.paper_item_type_code = #{paper_item_type_code, jdbcType=VARCHAR}
      </if>
      <if test="status != null">
        and item.`status` = #{status, jdbcType=VARCHAR}
      </if>
      <if test="name != null">
        and item.`name` like #{name, jdbcType=VARCHAR}
      </if>
      <if test="start_time != null">
        and record.start_time &gt;= #{start_time, jdbcType=TIMESTAMP}
      </if>
      <if test="end_time != null">
        and record.end_time &lt;= #{start_time, jdbcType=TIMESTAMP}
      </if>
    </where>

    GROUP BY item.`code`

    <if test="MAX_SCORE_ASC != null">
      ORDER  BY maxScore asc
    </if>
    <if test="MAX_SCORE_DESC != null">
      ORDER  BY maxScore desc
    </if>

    <if test="SPECIAL_COUNT_ASC != null">
      ORDER  BY userCount asc
    </if>
    <if test="SPECIAL_COUNT_DESC != null">
      ORDER  BY userCount desc
    </if>

    <if test="SCORE_ASC != null">
      ORDER  BY score asc
    </if>
    <if test="SCORE_DESC != null">
      ORDER  BY score desc
    </if>

    <if test="order_condition_default != null">
      ORDER  BY item.id desc
    </if>

    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>

  <select id="querySpecialRecordInfoListByAccount" parameterType="java.util.Map" resultType="com.iflytek.cetsim.dto.SpecialTaskRecordDTO">
      select item.`code` as paperItmeCode, item.paper_item_type_code as paperItemTypeCode, record.`code` as specialRecordCode, record.start_time as startTime, record.end_time as endTime, record.score
       from sim_special_train_record record left JOIN sim_paper_item item on item.`code` = record.paper_item_code
      where record.exam_state = 1 and record.student_no = #{student_account, jdbcType=VARCHAR}


    <if test="SCORE_ASC != null">
      ORDER  BY score asc
    </if>
    <if test="SCORE_DESC != null">
      ORDER  BY score desc
    </if>

    <if test="order_condition_default != null">
      ORDER BY record.start_time desc
    </if>

  </select>


  <select id="querySpecialRecordStateByAccount" parameterType="java.util.Map" resultType="java.lang.Short">
    select record.exam_state from sim_special_train_record record
    where record.student_no = #{student_account, jdbcType=VARCHAR} and record.`code` = #{record_code, jdbcType=VARCHAR}
  </select>

  <select id="querySpecialRecordReportByAccount" parameterType="java.util.Map" resultType="com.iflytek.cetsim.dto.SpecialTaskRecordDTO">
      select record.`code` as specialRecordCode, itemType.name as paperItemTypeName, item.`code` as paperItmeCode, item.`name` as paperItemName,
      record.start_time as startTime, record.end_time as endTime, record.score, record.data_path as dataPath
      from sim_paper_item item left JOIN sim_special_train_record record  on item.`code` = record.paper_item_code
      LEFT JOIN sim_paper_item_type itemType on itemType.code = item.paper_item_type_code
      where record.exam_state = 1 and record.data_state = 1 and record.student_no = #{student_account, jdbcType=VARCHAR} and record.`code` = #{record_code, jdbcType=VARCHAR}
  </select>


  <select id="verifyToken" parameterType="java.util.Map" resultType="java.lang.String">
    select * from sim_special_train_record where token = #{token} and code = #{recordId}
  </select>

  <update id="updateToken" parameterType="java.util.Map">
    update sim_special_train_record set token = #{token} where student_no = #{account}
  </update>


  <select id="querySpecialStudyResultByRecordCode" parameterType="java.util.Map" resultType="java.lang.String">
    SELECT eval.detail
     from sim_special_train_record record
    LEFT JOIN sim_paper_item item on item.`code` = record.paper_item_code
    LEFT JOIN sim_eval_record eval on record.`code` = eval.record_code
    where record.exam_state = 1
    <if test="student_account != null">
      and record.student_no = #{student_account, jdbcType=VARCHAR}
    </if>

    <if test="paper_item_type_code != null">
      and eval.paper_item_type_code = #{paper_item_type_code, jdbcType=VARCHAR}
    </if>

    <if test="record_code != null">
      and eval.record_code = #{record_code, jdbcType=VARCHAR}
    </if>
    LIMIT 0, 1

  </select>



</mapper>