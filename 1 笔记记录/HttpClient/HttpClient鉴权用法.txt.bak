
HttpClient  Basic 鉴权的方式

 String authStr = "ADMIN:KYLIN";

 //生成base64
	byte[] b = null;
        String basicAuthStr = null;
        try
        {
            b = authStr.getBytes("utf-8");
        }
        catch (UnsupportedEncodingException e)
        {
            e.printStackTrace();
        }

        if (b != null)
        {
            basicAuthStr = new BASE64Encoder().encode(b);
        }

//创建请求
 public void sendHttpGetRequest(String restURL, String basicAuthStr)
    {
        HttpResultDTO httpResultDTO = new HttpResultDTO();

        CloseableHttpClient httpclient = HttpClients.createDefault();
        try
        {
            // 创建httpget.
            HttpGet httpget = new HttpGet(restURL);
            httpget.setHeader(HttpHeaders.AUTHORIZATION, "Basic " + basicAuthStr);
            httpget.setHeader("Content-Type", "application/json;charset=UTF-8");

            // 执行get请求.
            CloseableHttpResponse response = httpclient.execute(httpget);

            httpResultDTO.setStatusCode(response.getStatusLine().getStatusCode());

            try
            {
                // 获取响应实体
                HttpEntity entity = response.getEntity();
                System.out.println("--------------------------------------");

                // 打印响应状态
                System.out.println(response.getStatusLine());
                if (entity != null)
                {
                    // 打印响应内容长度
                    System.out.println("Response content length: " + entity.getContentLength());
                    // 打印响应内容
                    System.out.println("Response content: " + EntityUtils.toString(entity));

                    httpResultDTO.setResultMessage(EntityUtils.toString(entity));
                }
                System.out.println("------------------------------------");
            }
            finally
            {
                response.close();
            }
        }
        catch (ClientProtocolException e)
        {
            e.printStackTrace();
        }
        catch (ParseException e)
        {
            e.printStackTrace();
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
        finally
        {
            // 关闭连接,释放资源
            try {
                httpclient.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

